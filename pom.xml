<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
	</parent>
	<groupId>com.htsc.htbcps</groupId>
	<artifactId>myDemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>myDemo</name>
	<description>myDemo</description>
	<modules>
		<module>myDemo-api</module>
		<module>myDemo-impl</module>
		<module>myDemo-dubboservice</module>
		<module>myDemo-dal</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.complier.source>1.8</maven.complier.source>
		<maven.complier.target>1.8</maven.complier.target>
		<java.version>1.8</java.version>
		<project-version>0.0.1-SNAPSHOT</project-version>
		<mybatis.version>3.4.4</mybatis.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.htsc.htbcps</groupId>
				<artifactId>myDemo-api</artifactId>
				<version>${project-version}</version>
			</dependency>
			<dependency>
				<groupId>com.htsc.htbcps</groupId>
				<artifactId>myDemo-dal</artifactId>
				<version>${project-version}</version>
			</dependency>
			<dependency>
				<groupId>com.htsc.htbcps</groupId>
				<artifactId>myDemo-impl</artifactId>
				<version>${project-version}</version>
			</dependency>
			<dependency>
				<groupId>com.htsc.htbcps</groupId>
				<artifactId>myDemo-dubboservice</artifactId>
				<version>${project-version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>2.5.3</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>3.4.6</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>0.1</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>1.4.2.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.41</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>1.2.2.RELEASE</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>${skip_maven_deploy}</skip>
				</configuration>
			</plugin>
			<!-- 这段配置会被应用到所有子模块的maven-compiler-plugin中， 由于Maven内置了maven-compiler-plugin与生命周期的绑定， 
				因此子模块就不再需要任何maven-compiler-plugin的配置了。 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>